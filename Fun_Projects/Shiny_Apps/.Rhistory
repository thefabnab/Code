?require
install.packages("RPostgreSQL")
library("BiocInstaller", lib.loc="/usr/local/lib/R/3.2/site-library")
biocLite(pkgs = c("MASS", "GenomicRanges"))
?MASS
ghdbConnect <- function(host = NULL, db_path = NULL) {
if (!is.null(db_path)){
require("SQLite");
con = dbConnect(SQLite(), dbname=db_path, flags=SQLITE_RO);
} else {
require(RPostgreSQL)
pwd = "N7Tks0xPS";
if (is.null(pwd)) {
stop("Unable to retrieve DB password",
" from env var GHDB_PWD");
}
clear
q
clear
clr
clr()
?clear
ghdbConnect <- function(host = NULL, db_path = NULL) {
if (!is.null(db_path)){
require("SQLite");
con = dbConnect(SQLite(), dbname=db_path, flags=SQLITE_RO);
} else {
require(RPostgreSQL)
pwd = "N7Tks0xPS";
if (is.null(pwd)) {
stop("Unable to retrieve DB password",
" from env var GHDB_PWD");
}
drv <- dbDriver("PostgreSQL");
if (is.null(host)) host = "10.4.170.26";
if (host == "dev") host = "10.4.170.24";
if (host == "prd") host = "10.4.170.26";
if (host == "prdrep") host = "10.4.80.72";
print(paste0("Connecto to host ", host))
con = dbConnect(drv, dbname="ghdb",host=host,
port=5432, user="admin",password=pwd )
}
return (con);
}
View(ghdbConnect)
View(ghdbConnect)
fc.lst<-c("AHTGKCBGXX","AHTHHVBGXX")
con = ghdbConnect("prd");
gene = dbGetQuery(con, "select * from ghcnv_gene where timestamp >= '2016-01-26' and timestamp <= '2016-11-30';")
install.packages("shiny")
library(shiny)
runExample("01_hello")
library(shiny)
runExample("01_hello")
getwd()
setwd("Stuff/Git_Code/Fun_Projects/R_Shiny")
setwd("Stuff/Git_Code/Fun_Projects/Shiny_Apps/")
runApp("App-1")
runApp("App-1")
runApp("App-1")
runApp("App-1", display.mode = "showcase")
runApp('App-1')
?runExample
runExample("11_timer")
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
