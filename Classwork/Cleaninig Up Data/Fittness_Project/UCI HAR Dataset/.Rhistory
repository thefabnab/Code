apply(x,1,sum)
apply(x,2,sum)
lapply(x,sum)
?apply
library(datasets)
data(iris)
?iris
iris
?lapply
lapply(iris[,1], mean)
iris
?colmean
?col
?colsum
?Colsum
?colsums
?colMeans
colMeans(Iris[,1])
colMeans(Iris)
apply(Iris, 1, mean)
colMeans(iris)
apply(iris, 1, mean)
iris$mean
View(iris)
colSums(iris)
colSums(iris[,1])
colSums(iris[1,1])
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 -82.63636
debug(ls)
ls
ls()
debug(ls)
ls()
library(datasets)
data(iris)
iris
tapply(iris$virginica, iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, iris$virginica, mean)
tapply(iris$Sepal.Length, iris$virginica,)
tapply(iris$Sepal.Length, iris$virginica, sum)
mean(irisSepal.L[irisSpecies=='virginica'])
mean(irisSepal.Length[irisSpecies=='virginica'])
?mean
mean(iris$Sepal.Length[irisSpecies=='virginica'])
mean(iris$Sepal.Length[Species=='virginica'])
mean(iris$Sepal.Length[$Species=='virginica'])
mean(iris$Sepal.Length[Species=='virginica'])
mean(a$virginica$Sepal.Length)
mean(iris$virginica$Sepal.Length)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
library(datasets)
data(mtcars)
sapply(mtcars, cyl, mean)
mtcars
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x>0]
x[c(x[3], x[5], x[7])]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11,2,NA)
vect2 <- c(11,2,NA)
vect2
names(vect2) <-c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix( 1:20, nrow = 4, ncol = 5)
matrix(1:20, 4,5)
matrix( data = 1:20, nrow = 4, ncol = 5)
infor()
info()
my_matrix2 <-matrix( data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data, cnames)
?dim
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
install.packages("RMySQL")
getwd()
setwd("Desktop/"
)
getwd()
education <- data.frame(read.csv("educationaldata.csv"))
GDP <- data.fram(read.csv("GDP.csv"))
GDP <- data.frame(read.csv("GDP.csv"))
GDP
names(GDP
)
names(education)
View(GDP)
View(GDP)
names(education)
names(GDP)
?merge
View(education)
View(education)
joined <- merge(education, GDP, by.education = "CountryCode", by.GDP = "X")
View(joined)
?order
order(GDP)
GDP[GDP$X]
GDP[GDP$X,]
GDP[X != ""]
dtGDP <- data.table(read.csv("GDP.csv"), skip = 4, nrows = 215))
dtGDP <- data.table(read.csv("GDP.csv"), skip = 4, nrows = 215)
library(data.table)
dtGDP <- data.table(read.csv("GDP.csv"), skip = 4, nrows = 215)
dtGDP
View(dtGDP)
View(dtGDP)
dtGDP[X != ""]
GDP2 <- dtGDP[X != ""]
View(GDP2)
View(GDP2)
View(dtGDP)
View(dtGDP)
View(education)
View(education)
?data.table
education2 <- data.frame(education)
education2 <- education2[CountryCode != ""]
education2 <- data.table(education)
education2 <- education2[CountryCode != ""]
education2
View(education2)
View(education2)
colnames(GDP2)[1] <- "CountryCode"
?setnames
setnames(GDP2,"X", "CountryCode")
setnames(GDP2,X, CountryCode)
setnames(GDP2,1, "CountryCode")
Wan <- setnames(GDP2,1, "CountryCode")
Wan
View(Wan)
View(Wan)
?merge
joined <- merge(Wan,education2)
joined <- merge(Wan,education2, key = "CountryCode")
Wan <- data.table(Wan,key = "CountryCode")
education2 <- data.table(education2, key = "CountryCode")
joined <- merge(Wan,education2)
joined
View(joined)
View(joined)
?unieq
?unique
unique(joined[1,])
unique(joined[CountryCode])
unique(joined$CountryCode)
sum(unique(joined$CountryCode))
unique(joined$CountryCode)
joined[order(Gross.domestic.product.2012, decreasing = TRUE)]
frank <- joined[order(Gross.domestic.product.2012, decreasing = TRUE)]
View(frank)
?rbind
DT1 = data.table(A=1:3,B=letters[1:3])
DT2 = data.table(A=4:5,B=letters[4:5])
l = list(DT1,DT2)
m <- cbind(1, 1:7) # the '1' (= shorter vector) is recycled
m
m <- cbind(m, 8:14)[, c(1, 3, 2)] # insert a column
m
cbind(1:7, diag(3)) # vector is subset -> warning
m <- rbind(m, 1:10)
dd <- 10
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 0) # middle 2 rownames
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 1) # 3 rownames (default)
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 2) # 4 rownames
?sub
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
?names
?tolower
#Establishing working directory to access data and required libraries
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
library(data.table)
#combining training and test datasets
x_train <- read.table("train/X_train.txt")
x_test <- read.table("test/X_test.txt")
x <- rbind(x_train, x_test)
sub_train <- read.table("train/subject_train.txt")
sub_test <- read.table("test/subject_test.txt")
sub <- rbind(sub_train, sub_test)
y_train <- read.table("train/y_train.txt")
y_test <- read.table("test/y_test.txt")
y <- rbind(y_train, y_test)
#parses only the mean and std from features and combines with x
features <- read.table("features.txt")
mean_std <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x_mean_std <- x[, mean_std]
#Provied activities with specific names
names(x_mean_std) <- features[mean_std, 2]
names(x_mean_std) <- tolower(names(x_mean_std))
names(x_mean_std) <- gsub("\\(|\\)", "", names(x_mean_std))
activity <- read.table("activity_labels.txt")
activity[, 2] <- tolower(as.character(activity[, 2]))
activity[, 2] <- gsub("_", "", activity[, 2])
y[, 1] = activity[y[, 1], 2]
y_colnames(y) <- "activity"
y_colnames(subj) <- "subject"
#
fin_data <- cbind(subj, x_mean_sd, y)
str(fin_data)
write.table(fin_data, "Merged_Data.txt")
#
tidy_data_average <- aggregate(x=fin_data, by=list(activity=data$activity, subj=fin_data$subject), FUN=mean)
str(tidy_data_average)
write.table(tidy_data_average, "tidy_data_average.txt")
#Establishing working directory to access data and required libraries
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
library(data.table)
#combining training and test datasets
x_train <- read.table("train/X_train.txt")
x_test <- read.table("test/X_test.txt")
x <- rbind(x_train, x_test)
sub_train <- read.table("train/subject_train.txt")
sub_test <- read.table("test/subject_test.txt")
sub <- rbind(sub_train, sub_test)
y_train <- read.table("train/y_train.txt")
y_test <- read.table("test/y_test.txt")
y <- rbind(y_train, y_test)
#parses only the mean and std from features and combines with x
features <- read.table("features.txt")
mean_std <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x_mean_std <- x[, mean_std]
#Provied activities with specific names
names(x_mean_std) <- features[mean_std, 2]
names(x_mean_std) <- tolower(names(x_mean_std))
names(x_mean_std) <- gsub("\\(|\\)", "", names(x_mean_std))
activity <- read.table("activity_labels.txt")
activity[, 2] <- tolower(as.character(activity[, 2]))
activity[, 2] <- gsub("_", "", activity[, 2])
y[, 1] = activity[y[, 1], 2]
y_colnames(y) <- "activity"
y_colnames(sub) <- "subject"
#
fin_data <- cbind(sub, x_mean_sd, y)
str(fin_data)
write.table(fin_data, "Merged_Data.txt")
#
tidy_data_average <- aggregate(x=fin_data,
by=list(activity=data$activity,
sub=fin_data$subject), FUN=mean)
str(tidy_data_average)
write.table(tidy_data_average, "tidy_data_average.txt")
#Establishing working directory to access data and required libraries
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
library(data.table)
#combining training and test datasets
x_train <- read.table("train/X_train.txt")
x_test <- read.table("test/X_test.txt")
x <- rbind(x_train, x_test)
sub_train <- read.table("train/subject_train.txt")
sub_test <- read.table("test/subject_test.txt")
sub <- rbind(sub_train, sub_test)
y_train <- read.table("train/y_train.txt")
y_test <- read.table("test/y_test.txt")
y <- rbind(y_train, y_test)
#parses only the mean and std from features and combines with x
features <- read.table("features.txt")
mean_std <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x_mean_std <- x[, mean_std]
#Provied activities with specific names
names(x_mean_std) <- features[mean_std, 2]
names(x_mean_std) <- tolower(names(x_mean_std))
names(x_mean_std) <- gsub("\\(|\\)", "", names(x_mean_std))
activity <- read.table("activity_labels.txt")
activity[, 2] <- tolower(as.character(activity[, 2]))
activity[, 2] <- gsub("_", "", activity[, 2])
y[, 1] = activity[y[, 1], 2]
y_colnames(y) <- "activity"
y_colnames(sub) <- "subject"
#
fin_data <- cbind(sub, x_mean_std, y)
str(fin_data)
write.table(fin_data, "Merged_Data.txt")
#
tidy_data_average <- aggregate(x=fin_data,
by=list(activity=data$activity,
sub=fin_data$subject), FUN=mean)
str(tidy_data_average)
write.table(tidy_data_average, "tidy_data_average.txt")
#Establishing working directory to access data and required libraries
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
library(data.table)
#combining training and test datasets
x_train <- read.table("train/X_train.txt")
x_test <- read.table("test/X_test.txt")
x <- rbind(x_train, x_test)
sub_train <- read.table("train/subject_train.txt")
sub_test <- read.table("test/subject_test.txt")
sub <- rbind(sub_train, sub_test)
y_train <- read.table("train/y_train.txt")
y_test <- read.table("test/y_test.txt")
y <- rbind(y_train, y_test)
#parses only the mean and std from features and combines with x
features <- read.table("features.txt")
mean_std <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x_mean_std <- x[, mean_std]
#Provied activities with specific names
names(x_mean_std) <- features[mean_std, 2]
names(x_mean_std) <- tolower(names(x_mean_std))
names(x_mean_std) <- gsub("\\(|\\)", "", names(x_mean_std))
activity <- read.table("activity_labels.txt")
activity[, 2] <- tolower(as.character(activity[, 2]))
activity[, 2] <- gsub("_", "", activity[, 2])
y[, 1] = activity[y[, 1], 2]
y_colnames(y) <- "activity"
y_colnames(sub) <- "subject"
#
fin_data <- cbind(sub, x_mean_std, y)
str(fin_data)
write.table(fin_data, "Merged_Data.txt")
#
tidy_data_average <- aggregate(x=fin_data,
by=list(activity=fin_data$activity,
sub=fin_data$subject), FUN=mean)
str(tidy_data_average)
write.table(tidy_data_average, "tidy_data_average.txt")
mergeddata <- read.table("Merged_Data.txt")
View(mergeddata)
View(mergeddata)
write.table(tidy_data_average, "tidy_data_average.txt")
#Establishing working directory to access data and required libraries
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
library(data.table)
#combining training and test datasets
x_train <- read.table("train/X_train.txt")
x_test <- read.table("test/X_test.txt")
x <- rbind(x_train, x_test)
sub_train <- read.table("train/subject_train.txt")
sub_test <- read.table("test/subject_test.txt")
sub <- rbind(sub_train, sub_test)
y_train <- read.table("train/y_train.txt")
y_test <- read.table("test/y_test.txt")
y <- rbind(y_train, y_test)
#parses only the mean and std from features and combines with x
features <- read.table("features.txt")
mean_std <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x_mean_std <- x[, mean_std]
#Provied activities with specific names
names(x_mean_std) <- features[mean_std, 2]
names(x_mean_std) <- tolower(names(x_mean_std))
names(x_mean_std) <- gsub("\\(|\\)", "", names(x_mean_std))
activity <- read.table("activity_labels.txt")
activity[, 2] <- tolower(as.character(activity[, 2]))
activity[, 2] <- gsub("_", "", activity[, 2])
y[, 1] = activity[y[, 1], 2]
y_colnames(y) <- "activity"
y_colnames(sub) <- "subject"
#
fin_data <- cbind(sub, x_mean_std, y)
str(fin_data)
write.table(fin_data, "Merged_Data.txt")
#
tidy_data_average <- aggregate(x=fin_data,
by=list(activities=fin_data$activity,
sub=fin_data$subject), FUN=mean)
str(tidy_data_average)
write.table(tidy_data_average, "tidy_data_average.txt")
?aggregate
str(mergeddata)
str(mergeddata)
summary(merge)
summary(mergeddata)
colSums(!is.na(mergeddata))
View(mergeddata)
View(fin_data)
#Establishing working directory to access data and required libraries
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
library(data.table)
#combining training and test datasets
x_train <- read.table("train/X_train.txt")
x_test <- read.table("test/X_test.txt")
x <- rbind(x_train, x_test)
sub_train <- read.table("train/subject_train.txt")
sub_test <- read.table("test/subject_test.txt")
sub <- rbind(sub_train, sub_test)
y_train <- read.table("train/y_train.txt")
y_test <- read.table("test/y_test.txt")
y <- rbind(y_train, y_test)
#parses only the mean and std from features and combines with x
features <- read.table("features.txt")
mean_std <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x_mean_std <- x[, mean_std]
#Provied activities with specific names
names(x_mean_std) <- features[mean_std, 2]
names(x_mean_std) <- tolower(names(x_mean_std))
names(x_mean_std) <- gsub("\\(|\\)", "", names(x_mean_std))
activity <- read.table("activity_labels.txt")
activity[, 2] <- tolower(as.character(activity[, 2]))
activity[, 2] <- gsub("_", "", activity[, 2])
y[, 1] = activity[y[, 1], 2]
y_colnames(y) <- "activity"
y_colnames(sub) <- "subject"
#
fin_data <- cbind(sub, x_mean_std, y)
fin_data <- names(fin_data)[1]<-paste("subject")
fin_data <- names(fin_data)[68]<-paste("activity")
str(fin_data)
write.table(fin_data, "Merged_Data.txt")
#
tidy_data_average <- aggregate(x=fin_data,
by=list(activities=fin_data$activity,
subjects=fin_data$subject), FUN=mean)
str(tidy_data_average)
write.table(tidy_data_average, "tidy_data_average.txt")
#Establishing working directory to access data and required libraries
setwd("Work/Google Drive/School Work/Cleaning Up Data/Homework/UCI HAR Dataset/")
library(data.table)
#combining training and test datasets
x_train <- read.table("train/X_train.txt")
x_test <- read.table("test/X_test.txt")
x <- rbind(x_train, x_test)
sub_train <- read.table("train/subject_train.txt")
sub_test <- read.table("test/subject_test.txt")
sub <- rbind(sub_train, sub_test)
y_train <- read.table("train/y_train.txt")
y_test <- read.table("test/y_test.txt")
y <- rbind(y_train, y_test)
#parses only the mean and std from features and combines with x
features <- read.table("features.txt")
mean_std <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x_mean_std <- x[, mean_std]
#Provied activities with specific names
names(x_mean_std) <- features[mean_std, 2]
names(x_mean_std) <- tolower(names(x_mean_std))
names(x_mean_std) <- gsub("\\(|\\)", "", names(x_mean_std))
activity <- read.table("activity_labels.txt")
activity[, 2] <- tolower(as.character(activity[, 2]))
activity[, 2] <- gsub("_", "", activity[, 2])
y[, 1] = activity[y[, 1], 2]
y_colnames(y) <- "activity"
y_colnames(sub) <- "subject"
#
fin_data <- cbind(sub, x_mean_std, y)
names(fin_data)[1]<-paste("subject")
names(fin_data)[68]<-paste("activity")
str(fin_data)
write.table(fin_data, "Merged_Data.txt")
#
tidy_data_average <- aggregate(x=fin_data,
by=list(activities=fin_data$activity,
subjects=fin_data$subject), FUN=mean)
str(tidy_data_average)
write.table(tidy_data_average, "tidy_data_average.txt")
View(x_mean_std)
View(tidy_data_average)
